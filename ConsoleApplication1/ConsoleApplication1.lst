Microsoft (R) Macro Assembler Version 14.23.28106.4	    12/06/19 03:13:38
Source.asm						     Page 1 - 1


				Include Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				Include macros.inc
			      C .NOLIST
			      C .LIST
			      C 
 = 000007D0			buffer_size = 2000

 00000000			.data



				;lebel 1 30 dots
				   
 00000000 20 20 20 20 20	lev_1            db     "                              ###################",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 0D
	   0A
 00000033  20 20 20 20 20	                 db     "                              #P  . . • .      .#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 50 20 20 2E
	   20 2E 20 95 20
	   2E 20 20 20 20
	   20 20 2E 23 0D
	   0A
 00000066  20 20 20 20 20	                 db     "                              #######   • . .   #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 20 20 20
	   95 20 2E 20 2E
	   20 20 20 23 0D
	   0A
 00000099  20 20 20 20 20	                 db     "                              # . •   .•        #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 2E 20 95
	   20 20 20 2E 95
	   20 20 20 20 20
	   20 20 20 23 0D
	   0A
 000000CC  20 20 20 20 20	                 db     "                              #     .    .#######",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 20 20 20
	   20 2E 20 20 20
	   20 2E 23 23 23
	   23 23 23 23 0D
	   0A
 000000FF  20 20 20 20 20	                 db     "                              #   .•.   . •  ...#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 20 20 2E
	   95 2E 20 20 20
	   2E 20 95 20 20
	   2E 2E 2E 23 0D
	   0A
 00000132  20 20 20 20 20	                 db     "                              # . #########  .. #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 2E 20 23
	   23 23 23 23 23
	   23 23 23 20 20
	   2E 2E 20 23 0D
	   0A
 00000165  20 20 20 20 20	                 db     "                              #. .  •     .   . #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 2E 20 2E 20
	   20 95 20 20 20
	   20 20 2E 20 20
	   20 2E 20 23 0D
	   0A
 00000198  20 20 20 20 20	                 db     "                              # .. .     ..•..  #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 2E 2E 20
	   2E 20 20 20 20
	   20 2E 2E 95 2E
	   2E 20 20 23 0D
	   0A
 000001CB  20 20 20 20 20	                 db     "                              ###################",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 00

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;30 dots
 000001FD 20 20 20 20 20	 lev_2           db     "                              ###################",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 0D
	   0A
 00000230  20 20 20 20 20	                 db     "                              #P  . . • . .  • .#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 50 20 20 2E
	   20 2E 20 95 20
	   2E 20 2E 20 20
	   95 20 2E 23 0D
	   0A
 00000263  20 20 20 20 20	                 db     "                              #######   • . .   #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 20 20 20
	   95 20 2E 20 2E
	   20 20 20 23 0D
	   0A
 00000296  20 20 20 20 20	                 db     "                              # .     • .•.  .•.#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 2E 20 20
	   20 20 20 95 20
	   2E 95 2E 20 20
	   2E 95 2E 23 0D
	   0A
 000002C9  20 20 20 20 20	                 db     "                              ########  • #######",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 23 20 20
	   95 20 23 23 23
	   23 23 23 23 0D
	   0A
 000002FC  20 20 20 20 20	                 db     "                              # •       .    ...#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 95 20 20
	   20 20 20 20 20
	   2E 20 20 20 20
	   2E 2E 2E 23 0D
	   0A
 0000032F  20 20 20 20 20	                 db     "                              #.. #########.• . #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 2E 2E 20 23
	   23 23 23 23 23
	   23 23 23 2E 95
	   20 2E 20 23 0D
	   0A
 00000362  20 20 20 20 20	                 db     "                              #. .  • . . .   . #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 2E 20 2E 20
	   20 95 20 2E 20
	   2E 20 2E 20 20
	   20 2E 20 23 0D
	   0A
 00000395  20 20 20 20 20	                 db     "                              #    .  • .  • . .#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 20 20 20
	   2E 20 20 95 20
	   2E 20 20 95 20
	   2E 20 2E 23 0D
	   0A
 000003C8  20 20 20 20 20	                 db     "                              ###################",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 00

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;30
 000003FA 20 20 20 20 20	 lev_3           db     "                              ###################",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 0D
	   0A
 0000042D  20 20 20 20 20	                 db     "                              #P  . . • . .  • .#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 50 20 20 2E
	   20 2E 20 95 20
	   2E 20 2E 20 20
	   95 20 2E 23 0D
	   0A
 00000460  20 20 20 20 20	                 db     "                              ####### • • . .   #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 20 95 20
	   95 20 2E 20 2E
	   20 20 20 23 0D
	   0A
 00000493  20 20 20 20 20	                 db     "                              # .     .  •.  .•.#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 2E 20 20
	   20 20 20 2E 20
	   20 95 2E 20 20
	   2E 95 2E 23 0D
	   0A
 000004C6  20 20 20 20 20	                 db     "                              ##########.########",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 23 23 23
	   2E 23 23 23 23
	   23 23 23 23 0D
	   0A
 000004F9  20 20 20 20 20	                 db     "                              # •  .    .   •...#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 95 20 20
	   2E 20 20 20 20
	   2E 20 20 20 95
	   2E 2E 2E 23 0D
	   0A
 0000052C  20 20 20 20 20	                 db     "                              #•. #########.• . #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 95 2E 20 23
	   23 23 23 23 23
	   23 23 23 2E 95
	   20 2E 20 23 0D
	   0A
 0000055F  20 20 20 20 20	                 db     "                              #   .  • . .    . #",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 20 20 2E
	   20 20 95 20 2E
	   20 2E 20 20 20
	   20 2E 20 23 0D
	   0A
 00000592  20 20 20 20 20	                 db     "                              # . • . • .  • . .#",0dh,0ah
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 20 2E 20 95
	   20 2E 20 95 20
	   2E 20 20 95 20
	   2E 20 2E 23 0D
	   0A
 000005C5  20 20 20 20 20	                 db     "                              ###################",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 00

 000005F7 20 20 20 20 20	score_str        db      "                             ___Score is = ",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   5F 5F 53 63 6F
	   72 65 20 69 73
	   20 3D 20 00
 00000623 20 20 20 20 20	life_str         db      "                             ___Life  is = ",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 5F
	   5F 5F 4C 69 66
	   65 20 20 69 73
	   20 3D 20 00

 0000064F 0000			score            dw      0
 00000651 0003			life             dw      3

 00000653 0000			level            dw      0

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 00000000			.code
 00000000			main PROC

 00000000  E8 00000011		call display
 00000005  E8 00000507		call menu_proc
 0000000A  E8 0000014A		call control_menu

				exit
 00000016			main endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000016			display proc
 00000016  B8 0000000E		mov eax,yellow
 0000001B  E8 00000000 E	call settextcolor
				mWrite <"     ********************************************************************************************",0dh,0ah>
 00000655		     1		.data		
 00000655 20 20 20 20 20     1		??0000 BYTE "     ********************************************************************************************",0dh,0ah,0	
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 0D 0A 00
 00000020		     1		.code
 00000020  52		     1		push	edx
 00000021  BA 00000655 R     1		mov	edx,OFFSET ??0000
 00000026  E8 00000000 E     1		call	WriteString
 0000002B  5A		     1		pop	edx
				mWrite <"      __________________________________________________________________________________________ ",0dh,0ah>
 000006B9		     1		.data		
 000006B9 20 20 20 20 20     1		??0001 BYTE "      __________________________________________________________________________________________ ",0dh,0ah,0	
	   20 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 20 0D 0A 00
 0000002C		     1		.code
 0000002C  52		     1		push	edx
 0000002D  BA 000006B9 R     1		mov	edx,OFFSET ??0001
 00000032  E8 00000000 E     1		call	WriteString
 00000037  5A		     1		pop	edx
				mWrite <"     |                                                                                          |   ",0dh,0ah>
 0000071D		     1		.data		
 0000071D 20 20 20 20 20     1		??0002 BYTE "     |                                                                                          |   ",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 7C 20 20 20
	   0D 0A 00
 00000038		     1		.code
 00000038  52		     1		push	edx
 00000039  BA 0000071D R     1		mov	edx,OFFSET ??0002
 0000003E  E8 00000000 E     1		call	WriteString
 00000043  5A		     1		pop	edx
				mWrite <"     |        |ppppppp      A         CCCCC    MMMM    MMMMM        A          |N       N|      | ",0dh,0ah>
 00000784		     1		.data		
 00000784 20 20 20 20 20     1		??0003 BYTE "     |        |ppppppp      A         CCCCC    MMMM    MMMMM        A          |N       N|      | ",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 7C
	   70 70 70 70 70
	   70 70 20 20 20
	   20 20 20 41 20
	   20 20 20 20 20
	   20 20 20 43 43
	   43 43 43 20 20
	   20 20 4D 4D 4D
	   4D 20 20 20 20
	   4D 4D 4D 4D 4D
	   20 20 20 20 20
	   20 20 20 41 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   4E 20 20 20 20
	   20 20 20 4E 7C
	   20 20 20 20 20
	   20 7C 20 0D 0A
	   00
 00000044		     1		.code
 00000044  52		     1		push	edx
 00000045  BA 00000784 R     1		mov	edx,OFFSET ??0003
 0000004A  E8 00000000 E     1		call	WriteString
 0000004F  5A		     1		pop	edx
				mWrite <"     |        |pp    pp    A  A      C         M   MM  MM  M       A  A        |N N     N|      |",0dh,0ah>
 000007E9		     1		.data		
 000007E9 20 20 20 20 20     1		??0004 BYTE "     |        |pp    pp    A  A      C         M   MM  MM  M       A  A        |N N     N|      |",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 7C
	   70 70 20 20 20
	   20 70 70 20 20
	   20 20 41 20 20
	   41 20 20 20 20
	   20 20 43 20 20
	   20 20 20 20 20
	   20 20 4D 20 20
	   20 4D 4D 20 20
	   4D 4D 20 20 4D
	   20 20 20 20 20
	   20 20 41 20 20
	   41 20 20 20 20
	   20 20 20 20 7C
	   4E 20 4E 20 20
	   20 20 20 4E 7C
	   20 20 20 20 20
	   20 7C 0D 0A 00
 00000050		     1		.code
 00000050  52		     1		push	edx
 00000051  BA 000007E9 R     1		mov	edx,OFFSET ??0004
 00000056  E8 00000000 E     1		call	WriteString
 0000005B  5A		     1		pop	edx
				mWrite <"     |        |ppppppp    AAAAAA     C         M     M     M      AAAAAA       |N   N   N|      |",0dh,0ah>
 0000084D		     1		.data		
 0000084D 20 20 20 20 20     1		??0005 BYTE "     |        |ppppppp    AAAAAA     C         M     M     M      AAAAAA       |N   N   N|      |",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 7C
	   70 70 70 70 70
	   70 70 20 20 20
	   20 41 41 41 41
	   41 41 20 20 20
	   20 20 43 20 20
	   20 20 20 20 20
	   20 20 4D 20 20
	   20 20 20 4D 20
	   20 20 20 20 4D
	   20 20 20 20 20
	   20 41 41 41 41
	   41 41 20 20 20
	   20 20 20 20 7C
	   4E 20 20 20 4E
	   20 20 20 4E 7C
	   20 20 20 20 20
	   20 7C 0D 0A 00
 0000005C		     1		.code
 0000005C  52		     1		push	edx
 0000005D  BA 0000084D R     1		mov	edx,OFFSET ??0005
 00000062  E8 00000000 E     1		call	WriteString
 00000067  5A		     1		pop	edx
				mWrite <"     |        |pp        A      A    C         M           M     A      A      |N     N N|      |",0dh,0ah>
 000008B1		     1		.data		
 000008B1 20 20 20 20 20     1		??0006 BYTE "     |        |pp        A      A    C         M           M     A      A      |N     N N|      |",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 7C
	   70 70 20 20 20
	   20 20 20 20 20
	   41 20 20 20 20
	   20 20 41 20 20
	   20 20 43 20 20
	   20 20 20 20 20
	   20 20 4D 20 20
	   20 20 20 20 20
	   20 20 20 20 4D
	   20 20 20 20 20
	   41 20 20 20 20
	   20 20 41 20 20
	   20 20 20 20 7C
	   4E 20 20 20 20
	   20 4E 20 4E 7C
	   20 20 20 20 20
	   20 7C 0D 0A 00
 00000068		     1		.code
 00000068  52		     1		push	edx
 00000069  BA 000008B1 R     1		mov	edx,OFFSET ??0006
 0000006E  E8 00000000 E     1		call	WriteString
 00000073  5A		     1		pop	edx
				mWrite <"     |        |pp       A        A    CCCCC    M           M    A        A     |N       N|      |",0dh,0ah>
 00000915		     1		.data		
 00000915 20 20 20 20 20     1		??0007 BYTE "     |        |pp       A        A    CCCCC    M           M    A        A     |N       N|      |",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 7C
	   70 70 20 20 20
	   20 20 20 20 41
	   20 20 20 20 20
	   20 20 20 41 20
	   20 20 20 43 43
	   43 43 43 20 20
	   20 20 4D 20 20
	   20 20 20 20 20
	   20 20 20 20 4D
	   20 20 20 20 41
	   20 20 20 20 20
	   20 20 20 41 20
	   20 20 20 20 7C
	   4E 20 20 20 20
	   20 20 20 4E 7C
	   20 20 20 20 20
	   20 7C 0D 0A 00
 00000074		     1		.code
 00000074  52		     1		push	edx
 00000075  BA 00000915 R     1		mov	edx,OFFSET ??0007
 0000007A  E8 00000000 E     1		call	WriteString
 0000007F  5A		     1		pop	edx
				mWrite <"     |__________________________________________________________________________________________| ",0dh,0ah>
 00000979		     1		.data		
 00000979 20 20 20 20 20     1		??0008 BYTE "     |__________________________________________________________________________________________| ",0dh,0ah,0	
	   7C 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 7C 20 0D 0A
	   00
 00000080		     1		.code
 00000080  52		     1		push	edx
 00000081  BA 00000979 R     1		mov	edx,OFFSET ??0008
 00000086  E8 00000000 E     1		call	WriteString
 0000008B  5A		     1		pop	edx
				mWrite <"                                                                                                  ",0dh,0ah>
 000009DE		     1		.data		
 000009DE 20 20 20 20 20     1		??0009 BYTE "                                                                                                  ",0dh,0ah,0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 0D 0A
	   00
 0000008C		     1		.code
 0000008C  52		     1		push	edx
 0000008D  BA 000009DE R     1		mov	edx,OFFSET ??0009
 00000092  E8 00000000 E     1		call	WriteString
 00000097  5A		     1		pop	edx
				mWrite <"     ********************************************************************************************",0dh,0ah>
 00000A43		     1		.data		
 00000A43 20 20 20 20 20     1		??000A BYTE "     ********************************************************************************************",0dh,0ah,0	
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 0D 0A 00
 00000098		     1		.code
 00000098  52		     1		push	edx
 00000099  BA 00000A43 R     1		mov	edx,OFFSET ??000A
 0000009E  E8 00000000 E     1		call	WriteString
 000000A3  5A		     1		pop	edx
 000000A4  E8 00000000 E	call crlf
 000000A9  E8 00000000 E	call crlf
				mWrite <"     ____________________________________MADE BY_______________________________________________ ",0ah,0dh>
 00000AA7		     1		.data		
 00000AA7 20 20 20 20 20     1		??000B BYTE "     ____________________________________MADE BY_______________________________________________ ",0ah,0dh,0	
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 4D 41 44 45
	   20 42 59 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   20 0A 0D 00
 000000AE		     1		.code
 000000AE  52		     1		push	edx
 000000AF  BA 00000AA7 R     1		mov	edx,OFFSET ??000B
 000000B4  E8 00000000 E     1		call	WriteString
 000000B9  5A		     1		pop	edx
 000000BA  E8 00000000 E	call crlf
 000000BF  E8 00000000 E	call crlf
 000000C4  B8 0000000B		mov eax,lightcyan
 000000C9  E8 00000000 E	call settextcolor
				mWrite <"          #  MUHAMMAD AWAIS ZAHID",0dh,0ah>
 00000B0A		     1		.data		
 00000B0A 20 20 20 20 20     1		??000C BYTE "          #  MUHAMMAD AWAIS ZAHID",0dh,0ah,0	
	   20 20 20 20 20
	   23 20 20 4D 55
	   48 41 4D 4D 41
	   44 20 41 57 41
	   49 53 20 5A 41
	   48 49 44 0D 0A
	   00
 000000CE		     1		.code
 000000CE  52		     1		push	edx
 000000CF  BA 00000B0A R     1		mov	edx,OFFSET ??000C
 000000D4  E8 00000000 E     1		call	WriteString
 000000D9  5A		     1		pop	edx
				mWrite <"          #  ZULQARNAIN HAIDER",0dh,0ah>
 00000B2E		     1		.data		
 00000B2E 20 20 20 20 20     1		??000D BYTE "          #  ZULQARNAIN HAIDER",0dh,0ah,0	
	   20 20 20 20 20
	   23 20 20 5A 55
	   4C 51 41 52 4E
	   41 49 4E 20 48
	   41 49 44 45 52
	   0D 0A 00
 000000DA		     1		.code
 000000DA  52		     1		push	edx
 000000DB  BA 00000B2E R     1		mov	edx,OFFSET ??000D
 000000E0  E8 00000000 E     1		call	WriteString
 000000E5  5A		     1		pop	edx
				mWrite <"          #  FAHAD USMAN",0dh,0ah>
 00000B4F		     1		.data		
 00000B4F 20 20 20 20 20     1		??000E BYTE "          #  FAHAD USMAN",0dh,0ah,0	
	   20 20 20 20 20
	   23 20 20 46 41
	   48 41 44 20 55
	   53 4D 41 4E 0D
	   0A 00
 000000E6		     1		.code
 000000E6  52		     1		push	edx
 000000E7  BA 00000B4F R     1		mov	edx,OFFSET ??000E
 000000EC  E8 00000000 E     1		call	WriteString
 000000F1  5A		     1		pop	edx
 000000F2  E8 00000000 E	call crlf
 000000F7  E8 00000000 E	call crlf
 000000FC  B8 0000000D		mov eax,LightMagenta
 00000101  E8 00000000 E	call settextcolor

				mWrite <"   ************************************************* ",0dh,0ah>
 00000B6A		     1		.data		
 00000B6A 20 20 20 2A 2A     1		??000F BYTE "   ************************************************* ",0dh,0ah,0	
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 20 0D 0A
	   00
 00000106		     1		.code
 00000106  52		     1		push	edx
 00000107  BA 00000B6A R     1		mov	edx,OFFSET ??000F
 0000010C  E8 00000000 E     1		call	WriteString
 00000111  5A		     1		pop	edx
				mWrite <"   *  _________________________________________    *",0dh,0ah>
 00000BA2		     1		.data		
 00000BA2 20 20 20 2A 20     1		??0010 BYTE "   *  _________________________________________    *",0dh,0ah,0	
	   20 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 20 20 20
	   20 2A 0D 0A 00
 00000112		     1		.code
 00000112  52		     1		push	edx
 00000113  BA 00000BA2 R     1		mov	edx,OFFSET ??0010
 00000118  E8 00000000 E     1		call	WriteString
 0000011D  5A		     1		pop	edx
				mWrite <"   * |   Game is    Loading------------------  *|  *",0dh,0ah>
 00000BD9		     1		.data		
 00000BD9 20 20 20 2A 20     1		??0011 BYTE "   * |   Game is    Loading------------------  *|  *",0dh,0ah,0	
	   7C 20 20 20 47
	   61 6D 65 20 69
	   73 20 20 20 20
	   4C 6F 61 64 69
	   6E 67 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   20 20 2A 7C 20
	   20 2A 0D 0A 00
 0000011E		     1		.code
 0000011E  52		     1		push	edx
 0000011F  BA 00000BD9 R     1		mov	edx,OFFSET ??0011
 00000124  E8 00000000 E     1		call	WriteString
 00000129  5A		     1		pop	edx
				mWrite <"   * |_________________________________________*|  *",0dh,0ah>
 00000C10		     1		.data		
 00000C10 20 20 20 2A 20     1		??0012 BYTE "   * |_________________________________________*|  *",0dh,0ah,0	
	   7C 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 2A 7C 20
	   20 2A 0D 0A 00
 0000012A		     1		.code
 0000012A  52		     1		push	edx
 0000012B  BA 00000C10 R     1		mov	edx,OFFSET ??0012
 00000130  E8 00000000 E     1		call	WriteString
 00000135  5A		     1		pop	edx
				mWrite <"   *                                               *",0dh,0ah>
 00000C47		     1		.data		
 00000C47 20 20 20 2A 20     1		??0013 BYTE "   *                                               *",0dh,0ah,0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2A 0D 0A 00
 00000136		     1		.code
 00000136  52		     1		push	edx
 00000137  BA 00000C47 R     1		mov	edx,OFFSET ??0013
 0000013C  E8 00000000 E     1		call	WriteString
 00000141  5A		     1		pop	edx
				mWrite <"   ************************************************* ",0dh,0ah>
 00000C7E		     1		.data		
 00000C7E 20 20 20 2A 2A     1		??0014 BYTE "   ************************************************* ",0dh,0ah,0	
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 20 0D 0A
	   00
 00000142		     1		.code
 00000142  52		     1		push	edx
 00000143  BA 00000C7E R     1		mov	edx,OFFSET ??0014
 00000148  E8 00000000 E     1		call	WriteString
 0000014D  5A		     1		pop	edx
				;;;;;;;;;;;;;;;;;;for delay
				;mov eax,3000
				;call delay


 0000014E  E8 00000000 E	call readchar
 00000153  E8 00000000 E	call CLRSCR

 00000158  C3			ret
 00000159			display endp

 00000159			control_menu proc

 00000159  66| 83 3D		cmp level,1
	   00000653 R 01
 00000161  74 14		je l1
 00000163  66| 83 3D		cmp level,2
	   00000653 R 02
 0000016B  74 1E		je l2
 0000016D  66| 83 3D		cmp level,3
	   00000653 R 03
 00000175  74 28		je l3
 00000177			l1:
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000177  B8 0000000E		mov eax,yellow
 0000017C  E8 00000000 E	call settextcolor
 00000181  BE 00000000 R	mov esi,offset lev_1
 00000186  83 C6 52		add esi,82
 00000189  EB 26		jmp again
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000018B			l2:
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000018B  B8 0000000A		mov eax,lightgreen
 00000190  E8 00000000 E	call settextcolor
 00000195  BE 000001FD R	mov esi,offset lev_2
 0000019A  83 C6 52		add esi,82
 0000019D  EB 12		jmp again
 0000019F			l3:
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000019F  B8 00000004		mov eax,red
 000001A4  E8 00000000 E	call settextcolor
 000001A9  BE 000003FA R	mov esi,offset lev_3
 000001AE  83 C6 52		add esi,82
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


 000001B1			again:

				mGotoxy 0,0  ;goto condion overriding the same string
 000001B1  52		     1		push edx
 000001B2  B6 00	     1		mov  dh,0
 000001B4  B2 00	     1		mov  dl,0
 000001B6  E8 00000000 E     1		call Gotoxy
 000001BB  5A		     1		pop  edx
 000001BC  E8 00000000 E	call crlf
 000001C1  E8 00000000 E	call crlf
 000001C6  E8 00000000 E	call crlf
 000001CB  E8 00000000 E	call crlf
 000001D0  E8 00000000 E	call crlf
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000001D5  66| 83 3D		cmp level,1
	   00000653 R 01
 000001DD  74 14		je l_1
 000001DF  66| 83 3D		cmp level,2
	   00000653 R 02
 000001E7  74 16		je l_2
 000001E9  66| 83 3D		cmp level,3
	   00000653 R 03
 000001F1  74 18		je l_3

 000001F3			l_1:
 000001F3  BA 00000000 R	mov edx,offset lev_1
 000001F8  E8 00000000 E	call writestring
 000001FD  EB 16		jmp next_go
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000001FF			l_2:
 000001FF  BA 000001FD R	mov edx,offset lev_2
 00000204  E8 00000000 E	call writestring
 00000209  EB 0A		jmp next_go
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000020B			l_3:
 0000020B  BA 000003FA R	mov edx,offset lev_3
 00000210  E8 00000000 E	call writestring

 00000215			next_go:

 00000215  E8 00000000 E	call crlf
 0000021A  E8 00000000 E	call crlf
 0000021F  E8 00000000 E	call crlf
 00000224  B8 00000003		mov eax,Cyan
 00000229  E8 00000000 E	call settextcolor
 0000022E  BA 000005F7 R	mov edx,offset score_str
 00000233  E8 00000000 E	call writestring
 00000238  B8 0000000F		mov eax,white
 0000023D  E8 00000000 E	call settextcolor
 00000242  66| A1		mov ax,score
	   0000064F R
 00000248  E8 00000000 E	call writedec
 0000024D  E8 00000000 E	call crlf
 00000252  E8 00000000 E	call crlf
 00000257  B8 00000003		mov eax,Cyan
 0000025C  E8 00000000 E	call settextcolor
 00000261  BA 00000623 R	mov edx,offset life_str
 00000266  E8 00000000 E	call writestring
 0000026B  B8 0000000F		mov eax,white
 00000270  E8 00000000 E	call settextcolor
 00000275  66| A1		mov ax,life
	   00000651 R
 0000027B  E8 00000000 E	call writedec
 00000280  E8 00000000 E	call crlf

				;;;;;;;;;;;;;;;;;
 00000285  66| 83 3D		cmp score,30
	   0000064F R 1E
 0000028D  0F 83 00000125	jae won1

				;again:
				;  mov  dl,row ;row
				;  mov  dh,col  ;column
				;  call Gotoxy

 00000293  E8 00000000 E	call readchar

 00000298  3C 64		cmp al,'d'
 0000029A  74 19		je d
 0000029C  3C 73		cmp al,'s'
 0000029E  74 50		je s
 000002A0  3C 77		cmp al,'w'
 000002A2  0F 84 0000008D	je w
 000002A8  3C 61		cmp al,'a'
 000002AA  0F 84 000000C7	je a
 000002B0  E9 FFFFFEFC		jmp again
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000002B5			d:
 000002B5  46			inc esi
 000002B6  B0 2E		mov al,'.'  
 000002B8  38 06		cmp [esi],al
				;;;;;;;;;;;;;;;;;;;;;checking dot;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000002BA  74 18		je do_d
 000002BC  B0 20		mov al,' '
 000002BE  38 06		cmp [esi],al
				;;;;;;;;;;;;;;;;;;;;;checking space;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000002C0  74 12		je do_d
				;;;;;;;;;;;;;;;;;;;;;checking mine;;;;;;;;;;;;;;;;;;;;;;;;;
 000002C2  B0 95		mov al,'•'
 000002C4  38 06		cmp [esi],al
 000002C6  74 06		je dec_d
				;;;;;;;;;;;;;;;;;;;;;;else again;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000002C8  4E			dec esi
 000002C9  E9 FFFFFEE3		jmp again
 000002CE			dec_d:
 000002CE  4E			dec esi
 000002CF  E9 000000DB		jmp mine_1

 000002D4			do_d:
 000002D4  B0 20		mov al,' '
 000002D6  38 06		cmp [esi],al
 000002D8  74 07		je go_d
 000002DA  66| FF 05		inc score
	   0000064F R
 000002E1			go_d:
 000002E1  4E			dec esi
 000002E2  B0 20		mov al,' '
 000002E4  88 06		mov [esi],al
 000002E6  46			inc esi
 000002E7  B0 50		mov al,'P'
 000002E9  88 06		mov [esi],al
 000002EB  E9 FFFFFEC1		jmp again
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000002F0			s:

 000002F0  83 C6 33		add esi,51
 000002F3  B0 2E		mov al,'.'
 000002F5  38 06		cmp [esi],al
 000002F7  74 1C		je do_s
 000002F9  B0 20		mov al,' '
 000002FB  38 06		cmp [esi],al
 000002FD  74 16		je do_s
				;;;;;;;;;;;;;;;;;;;checking mine;;;;;;;;;;;;;;;;;;;
 000002FF  B0 95		mov al,'•'
 00000301  38 06		cmp [esi],al
 00000303  74 08		je sub_s
				;;;;;;;;;;;;;;;;;;;;else;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000305  83 EE 33		sub esi,51
 00000308  E9 FFFFFEA4		jmp again
 0000030D			sub_s:
 0000030D  83 EE 33		sub esi,51
 00000310  E9 0000009A		jmp mine_1

 00000315			do_s:
 00000315  B0 20		mov al,' '
 00000317  38 06		cmp [esi],al
 00000319  74 07		je go_s
 0000031B  66| FF 05		inc score
	   0000064F R
 00000322			go_s:
 00000322  83 EE 33		sub esi,51
 00000325  B0 20		mov al,' '
 00000327  88 06		mov [esi],al
 00000329  83 C6 33		add esi,51
 0000032C  B0 50		mov al,'P'
 0000032E  88 06		mov [esi],al
 00000330  E9 FFFFFE7C		jmp again

				;;;;;;;;;;;;;;;;;;

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000335			w:
 00000335  83 EE 33		sub esi,51
 00000338  B0 2E		mov al,'.'
 0000033A  38 06		cmp [esi],al
 0000033C  74 19		je do_w
 0000033E  B0 20		mov al,' '
 00000340  38 06		cmp [esi],al
 00000342  74 13		je do_w
				;;;;;;;;;;;;;;;;;;;checking mine;;;;;;;;;;;;;;;;;;;
 00000344  B0 95		mov al,'•'
 00000346  38 06		cmp [esi],al
 00000348  74 08		je add_w
				;;;;;;;;;;;;;;;;;;;;else;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000034A  83 C6 33		add esi,51
 0000034D  E9 FFFFFE5F		jmp again
 00000352			add_w:
 00000352  83 C6 33		add esi,51
 00000355  EB 58		jmp mine_1

 00000357			do_w:
 00000357  B0 20		mov al,' '
 00000359  38 06		cmp [esi],al
 0000035B  74 07		je go_w
 0000035D  66| FF 05		inc score
	   0000064F R
 00000364			go_w:
 00000364  83 C6 33		add esi,51
 00000367  B0 20		mov al,' '
 00000369  88 06		mov [esi],al
 0000036B  83 EE 33		sub esi,51
 0000036E  B0 50		mov al,'P'
 00000370  88 06		mov [esi],al
 00000372  E9 FFFFFE3A		jmp again
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000377			a:

 00000377  4E			dec esi
 00000378  B0 2E		mov al,'.'
 0000037A  38 06		cmp [esi],al
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;checking dot;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000037C  74 15		je do_a
 0000037E  B0 20		mov al,' '
 00000380  38 06		cmp [esi],al
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;checking space;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000382  74 0F		je do_a
				;;;;;;;;;;;;;;;;;;;;;checking mine;;;;;;;;;;;;;;;;;;;;;;;;;
 00000384  B0 95		mov al,'•'
 00000386  38 06		cmp [esi],al
 00000388  74 06		je inc_a
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;else again;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000038A  46			inc esi
 0000038B  E9 FFFFFE21		jmp again

 00000390			inc_a:
 00000390  46			inc esi
 00000391  EB 1C		jmp mine_1

 00000393			do_a:
 00000393  B0 20		mov al,' '
 00000395  38 06		cmp [esi],al
 00000397  74 07		je go_a
 00000399  66| FF 05		inc score
	   0000064F R
 000003A0			go_a:
 000003A0  46			inc esi
 000003A1  B0 20		mov al,' '
 000003A3  88 06		mov [esi],al
 000003A5  4E			dec esi
 000003A6  B0 50		mov al,'P'
 000003A8  88 06		mov [esi],al
 000003AA  E9 FFFFFE02		jmp again

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000003AF			mine_1:
 000003AF  B0 20		mov al,' '
 000003B1  88 06		mov [esi],al
 000003B3  E8 00000006		call mine_proc
 000003B8			won1:
 000003B8  E8 0000005D		call won_proc
 000003BD  C3			ret
 000003BE			control_menu endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000003BE			mine_proc proc
 000003BE  66| FF 0D		dec life
	   00000651 R
 000003C5  66| 83 3D		cmp life,0
	   00000651 R 00
 000003CD  74 45		je zero


				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000003CF  66| 83 3D		cmp level,1
	   00000653 R 01
 000003D7  74 14		je l_1
 000003D9  66| 83 3D		cmp level,2
	   00000653 R 02
 000003E1  74 14		je l_2
 000003E3  66| 83 3D		cmp level,3
	   00000653 R 03
 000003EB  74 14		je l_3

 000003ED			l_1:
 000003ED  BE 00000000 R	mov esi,offset lev_1
 000003F2  83 C6 52		add esi,82
 000003F5  EB 14		jmp space_
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000003F7			l_2:
 000003F7  BE 000001FD R	mov esi,offset lev_2
 000003FC  83 C6 52		add esi,82
 000003FF  EB 0A		jmp space_
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000401			l_3:
 00000401  BE 000003FA R	mov esi,offset lev_3
 00000406  83 C6 52		add esi,82
 00000409  EB 00		jmp space_
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 0000040B			space_:
 0000040B  B0 50		mov al,'P'
 0000040D  88 06		mov [esi],al
 0000040F  E8 FFFFFD45		call control_menu
 00000414			zero:
 00000414  E8 00000080		call loss_proc
 00000419  C3			ret
 0000041A			mine_proc endp
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 0000041A			won_proc proc
 0000041A  E8 00000000 E	call crlf
 0000041F  E8 00000000 E	call crlf
 00000424  B8 0000000A		mov eax,LightGreen
 00000429  E8 00000000 E	call settextcolor
				mWrite <"   ***************CONGRATULATIONS******************* ",0dh,0ah>
 00000CB6		     1		.data		
 00000CB6 20 20 20 2A 2A     1		??0015 BYTE "   ***************CONGRATULATIONS******************* ",0dh,0ah,0	
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 43 4F
	   4E 47 52 41 54
	   55 4C 41 54 49
	   4F 4E 53 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 20 0D 0A
	   00
 0000042E		     1		.code
 0000042E  52		     1		push	edx
 0000042F  BA 00000CB6 R     1		mov	edx,OFFSET ??0015
 00000434  E8 00000000 E     1		call	WriteString
 00000439  5A		     1		pop	edx
				mWrite <"   *  __________________________________________   *",0dh,0ah>
 00000CEE		     1		.data		
 00000CEE 20 20 20 2A 20     1		??0016 BYTE "   *  __________________________________________   *",0dh,0ah,0	
	   20 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 20 20
	   20 2A 0D 0A 00
 0000043A		     1		.code
 0000043A  52		     1		push	edx
 0000043B  BA 00000CEE R     1		mov	edx,OFFSET ??0016
 00000440  E8 00000000 E     1		call	WriteString
 00000445  5A		     1		pop	edx
				mwrite <"   * |                                          |  *",0dh,0ah>      
 00000D25		     1		.data		
 00000D25 20 20 20 2A 20     1		??0017 BYTE "   * |                                          |  *",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 7C 20
	   20 2A 0D 0A 00
 00000446		     1		.code
 00000446  52		     1		push	edx
 00000447  BA 00000D25 R     1		mov	edx,OFFSET ??0017
 0000044C  E8 00000000 E     1		call	WriteString
 00000451  5A		     1		pop	edx
				mWrite <"   * |           YOU WON THE GAME               |  *",0dh,0ah>
 00000D5C		     1		.data		
 00000D5C 20 20 20 2A 20     1		??0018 BYTE "   * |           YOU WON THE GAME               |  *",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 20
	   20 20 59 4F 55
	   20 57 4F 4E 20
	   54 48 45 20 47
	   41 4D 45 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 7C 20
	   20 2A 0D 0A 00
 00000452		     1		.code
 00000452  52		     1		push	edx
 00000453  BA 00000D5C R     1		mov	edx,OFFSET ??0018
 00000458  E8 00000000 E     1		call	WriteString
 0000045D  5A		     1		pop	edx
				mWrite <"   * |__________________________________________|  *",0dh,0ah>
 00000D93		     1		.data		
 00000D93 20 20 20 2A 20     1		??0019 BYTE "   * |__________________________________________|  *",0dh,0ah,0	
	   7C 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 7C 20
	   20 2A 0D 0A 00
 0000045E		     1		.code
 0000045E  52		     1		push	edx
 0000045F  BA 00000D93 R     1		mov	edx,OFFSET ??0019
 00000464  E8 00000000 E     1		call	WriteString
 00000469  5A		     1		pop	edx
				mWrite <"   *                                               *",0dh,0ah>
 00000DCA		     1		.data		
 00000DCA 20 20 20 2A 20     1		??001A BYTE "   *                                               *",0dh,0ah,0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2A 0D 0A 00
 0000046A		     1		.code
 0000046A  52		     1		push	edx
 0000046B  BA 00000DCA R     1		mov	edx,OFFSET ??001A
 00000470  E8 00000000 E     1		call	WriteString
 00000475  5A		     1		pop	edx
				mWrite <"   ************************************************* ",0dh,0ah>
 00000E01		     1		.data		
 00000E01 20 20 20 2A 2A     1		??001B BYTE "   ************************************************* ",0dh,0ah,0	
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 20 0D 0A
	   00
 00000476		     1		.code
 00000476  52		     1		push	edx
 00000477  BA 00000E01 R     1		mov	edx,OFFSET ??001B
 0000047C  E8 00000000 E     1		call	WriteString
 00000481  5A		     1		pop	edx

 00000482  B8 000007D0		mov eax,2000
 00000487  E8 00000000 E	call delay
 0000048C  E8 00000080		call menu_proc
				exit
 00000498  C3			ret
 00000499			won_proc endp
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000499			loss_proc proc
 00000499  E8 00000000 E	call crlf
 0000049E  E8 00000000 E	call crlf
 000004A3  B8 0000000A		mov eax,LightGreen
 000004A8  E8 00000000 E	call settextcolor
				mWrite <"   *****************TRY AGAIN*********************** ",0dh,0ah>
 00000E39		     1		.data		
 00000E39 20 20 20 2A 2A     1		??001C BYTE "   *****************TRY AGAIN*********************** ",0dh,0ah,0	
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   54 52 59 20 41
	   47 41 49 4E 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 20 0D 0A
	   00
 000004AD		     1		.code
 000004AD  52		     1		push	edx
 000004AE  BA 00000E39 R     1		mov	edx,OFFSET ??001C
 000004B3  E8 00000000 E     1		call	WriteString
 000004B8  5A		     1		pop	edx
				mWrite <"   *  __________________________________________   *",0dh,0ah>
 00000E71		     1		.data		
 00000E71 20 20 20 2A 20     1		??001D BYTE "   *  __________________________________________   *",0dh,0ah,0	
	   20 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 20 20
	   20 2A 0D 0A 00
 000004B9		     1		.code
 000004B9  52		     1		push	edx
 000004BA  BA 00000E71 R     1		mov	edx,OFFSET ??001D
 000004BF  E8 00000000 E     1		call	WriteString
 000004C4  5A		     1		pop	edx
				mwrite <"   * |                                          |  *",0dh,0ah>      
 00000EA8		     1		.data		
 00000EA8 20 20 20 2A 20     1		??001E BYTE "   * |                                          |  *",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 7C 20
	   20 2A 0D 0A 00
 000004C5		     1		.code
 000004C5  52		     1		push	edx
 000004C6  BA 00000EA8 R     1		mov	edx,OFFSET ??001E
 000004CB  E8 00000000 E     1		call	WriteString
 000004D0  5A		     1		pop	edx
				mWrite <"   * |           YOU LOSS THE GAME              |  *",0dh,0ah>
 00000EDF		     1		.data		
 00000EDF 20 20 20 2A 20     1		??001F BYTE "   * |           YOU LOSS THE GAME              |  *",0dh,0ah,0	
	   7C 20 20 20 20
	   20 20 20 20 20
	   20 20 59 4F 55
	   20 4C 4F 53 53
	   20 54 48 45 20
	   47 41 4D 45 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 7C 20
	   20 2A 0D 0A 00
 000004D1		     1		.code
 000004D1  52		     1		push	edx
 000004D2  BA 00000EDF R     1		mov	edx,OFFSET ??001F
 000004D7  E8 00000000 E     1		call	WriteString
 000004DC  5A		     1		pop	edx
				mWrite <"   * |__________________________________________|  *",0dh,0ah>
 00000F16		     1		.data		
 00000F16 20 20 20 2A 20     1		??0020 BYTE "   * |__________________________________________|  *",0dh,0ah,0	
	   7C 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 7C 20
	   20 2A 0D 0A 00
 000004DD		     1		.code
 000004DD  52		     1		push	edx
 000004DE  BA 00000F16 R     1		mov	edx,OFFSET ??0020
 000004E3  E8 00000000 E     1		call	WriteString
 000004E8  5A		     1		pop	edx
				mWrite <"   *                                               *",0dh,0ah>
 00000F4D		     1		.data		
 00000F4D 20 20 20 2A 20     1		??0021 BYTE "   *                                               *",0dh,0ah,0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 2A 0D 0A 00
 000004E9		     1		.code
 000004E9  52		     1		push	edx
 000004EA  BA 00000F4D R     1		mov	edx,OFFSET ??0021
 000004EF  E8 00000000 E     1		call	WriteString
 000004F4  5A		     1		pop	edx
				mWrite <"   ************************************************* ",0dh,0ah>
 00000F84		     1		.data		
 00000F84 20 20 20 2A 2A     1		??0022 BYTE "   ************************************************* ",0dh,0ah,0	
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 20 0D 0A
	   00
 000004F5		     1		.code
 000004F5  52		     1		push	edx
 000004F6  BA 00000F84 R     1		mov	edx,OFFSET ??0022
 000004FB  E8 00000000 E     1		call	WriteString
 00000500  5A		     1		pop	edx
 00000501  B8 000007D0		mov eax,2000
 00000506  E8 00000000 E	call delay

 0000050B  E8 00000001		call menu_proc
 00000510  C3			ret
 00000511			loss_proc endp

				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 00000511			menu_proc proc

 00000511			again1:
 00000511  66| C7 05		mov score,0
	   0000064F R
	   0000
 0000051A  66| C7 05		mov life,3
	   00000651 R
	   0003

 00000523  E8 00000000 E	call clrscr
 00000528  E8 00000000 E	call crlf
 0000052D  E8 00000000 E	call crlf
 00000532  E8 00000000 E	call crlf
 00000537  E8 00000000 E	call crlf
				 
				mwrite<"                         1.Play Game",0dh,0ah>
 00000FBC		     1		.data		
 00000FBC 20 20 20 20 20     1		??0023 BYTE "                         1.Play Game",0dh,0ah,0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   31 2E 50 6C 61
	   79 20 47 61 6D
	   65 0D 0A 00
 0000053C		     1		.code
 0000053C  52		     1		push	edx
 0000053D  BA 00000FBC R     1		mov	edx,OFFSET ??0023
 00000542  E8 00000000 E     1		call	WriteString
 00000547  5A		     1		pop	edx
 00000548  E8 00000000 E	call crlf
				mwrite<"                         2.Instruction",0dh,0ah>
 00000FE3		     1		.data		
 00000FE3 20 20 20 20 20     1		??0024 BYTE "                         2.Instruction",0dh,0ah,0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   32 2E 49 6E 73
	   74 72 75 63 74
	   69 6F 6E 0D 0A
	   00
 0000054D		     1		.code
 0000054D  52		     1		push	edx
 0000054E  BA 00000FE3 R     1		mov	edx,OFFSET ??0024
 00000553  E8 00000000 E     1		call	WriteString
 00000558  5A		     1		pop	edx
 00000559  E8 00000000 E	call crlf                        
				mwrite<"                         3.Levels",0dh,0ah>
 0000100C		     1		.data		
 0000100C 20 20 20 20 20     1		??0025 BYTE "                         3.Levels",0dh,0ah,0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   33 2E 4C 65 76
	   65 6C 73 0D 0A
	   00
 0000055E		     1		.code
 0000055E  52		     1		push	edx
 0000055F  BA 0000100C R     1		mov	edx,OFFSET ??0025
 00000564  E8 00000000 E     1		call	WriteString
 00000569  5A		     1		pop	edx
 0000056A  E8 00000000 E	call crlf
				mwrite<"                         4.EXIT",0dh,0ah>
 00001030		     1		.data		
 00001030 20 20 20 20 20     1		??0026 BYTE "                         4.EXIT",0dh,0ah,0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   34 2E 45 58 49
	   54 0D 0A 00
 0000056F		     1		.code
 0000056F  52		     1		push	edx
 00000570  BA 00001030 R     1		mov	edx,OFFSET ??0026
 00000575  E8 00000000 E     1		call	WriteString
 0000057A  5A		     1		pop	edx


 0000057B  E8 00000000 E	call crlf
 00000580  B0 00		mov al,0
 00000582  E8 00000000 E	call readdec

 00000587  3C 01		cmp al,1
 00000589  74 19		je play_1_auto
 0000058B  3C 03		cmp al,3
 0000058D  0F 84 0000009B	je lev_lab
 00000593  3C 02		cmp al,2
 00000595  74 20		je instruction

 00000597  3C 04		cmp al,4
 00000599  0F 84 00000101	je exit_lab
 0000059F  E9 FFFFFF6D		jmp again1
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000005A4			play_1_auto:
 000005A4  66| C7 05		mov level,1
	   00000653 R
	   0001
 000005AD  E8 00000000 E	call clrscr
 000005B2  E8 FFFFFBA2		call control_menu
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 000005B7			instruction:
 000005B7  E8 00000000 E	call clrscr
				mwrite<"1.  Display a menu on the screen which will guide the user how to move the pacman (up 'W', down 'S', left 'A', right 'D').",0dh,0ah>
 00001052		     1		.data		
 00001052 31 2E 20 20 44     1		??0027 BYTE "1.  Display a menu on the screen which will guide the user how to move the pacman (up 'W', down 'S', left 'A', right 'D').",0dh,0ah,0	
	   69 73 70 6C 61
	   79 20 61 20 6D
	   65 6E 75 20 6F
	   6E 20 74 68 65
	   20 73 63 72 65
	   65 6E 20 77 68
	   69 63 68 20 77
	   69 6C 6C 20 67
	   75 69 64 65 20
	   74 68 65 20 75
	   73 65 72 20 68
	   6F 77 20 74 6F
	   20 6D 6F 76 65
	   20 74 68 65 20
	   70 61 63 6D 61
	   6E 20 28 75 70
	   20 27 57 27 2C
	   20 64 6F 77 6E
	   20 27 53 27 2C
	   20 6C 65 66 74
	   20 27 41 27 2C
	   20 72 69 67 68
	   74 20 27 44 27
	   29 2E 0D 0A 00
 000005BC		     1		.code
 000005BC  52		     1		push	edx
 000005BD  BA 00001052 R     1		mov	edx,OFFSET ??0027
 000005C2  E8 00000000 E     1		call	WriteString
 000005C7  5A		     1		pop	edx
 000005C8  E8 00000000 E	call crlf
				mwrite<"2.  Display a map for pac-man in Which Pac-Man can move. The walls of map is obstacles for Pac-Man. Pac-Man cannot move outside walls.",0dh,0ah>
 000010CF		     1		.data		
 000010CF 32 2E 20 20 44     1		??0028 BYTE "2.  Display a map for pac-man in Which Pac-Man can move. The walls of map is obstacles for Pac-Man. Pac-Man cannot move outside walls.",0dh,0ah,0	
	   69 73 70 6C 61
	   79 20 61 20 6D
	   61 70 20 66 6F
	   72 20 70 61 63
	   2D 6D 61 6E 20
	   69 6E 20 57 68
	   69 63 68 20 50
	   61 63 2D 4D 61
	   6E 20 63 61 6E
	   20 6D 6F 76 65
	   2E 20 54 68 65
	   20 77 61 6C 6C
	   73 20 6F 66 20
	   6D 61 70 20 69
	   73 20 6F 62 73
	   74 61 63 6C 65
	   73 20 66 6F 72
	   20 50 61 63 2D
	   4D 61 6E 2E 20
	   50 61 63 2D 4D
	   61 6E 20 63 61
	   6E 6E 6F 74 20
	   6D 6F 76 65 20
	   6F 75 74 73 69
	   64 65 20 77 61
	   6C 6C 73 2E 0D
	   0A 00
 000005CD		     1		.code
 000005CD  52		     1		push	edx
 000005CE  BA 000010CF R     1		mov	edx,OFFSET ??0028
 000005D3  E8 00000000 E     1		call	WriteString
 000005D8  5A		     1		pop	edx
 000005D9  E8 00000000 E	call crlf
				mwrite<"3.  Allow the pacman to move on the map as per the instructions you have given in your menu",0dh,0ah>
 00001158		     1		.data		
 00001158 33 2E 20 20 41     1		??0029 BYTE "3.  Allow the pacman to move on the map as per the instructions you have given in your menu",0dh,0ah,0	
	   6C 6C 6F 77 20
	   74 68 65 20 70
	   61 63 6D 61 6E
	   20 74 6F 20 6D
	   6F 76 65 20 6F
	   6E 20 74 68 65
	   20 6D 61 70 20
	   61 73 20 70 65
	   72 20 74 68 65
	   20 69 6E 73 74
	   72 75 63 74 69
	   6F 6E 73 20 79
	   6F 75 20 68 61
	   76 65 20 67 69
	   76 65 6E 20 69
	   6E 20 79 6F 75
	   72 20 6D 65 6E
	   75 0D 0A 00
 000005DE		     1		.code
 000005DE  52		     1		push	edx
 000005DF  BA 00001158 R     1		mov	edx,OFFSET ??0029
 000005E4  E8 00000000 E     1		call	WriteString
 000005E9  5A		     1		pop	edx
 000005EA  E8 00000000 E	call crlf
				mwrite<"4.  Allow the pacman to eat everything (dots '.', mines '•') on the map except Wall .",0dh,0ah>
 000011B6		     1		.data		
 000011B6 34 2E 20 20 41     1		??002A BYTE "4.  Allow the pacman to eat everything (dots '.', mines '•') on the map except Wall .",0dh,0ah,0	
	   6C 6C 6F 77 20
	   74 68 65 20 70
	   61 63 6D 61 6E
	   20 74 6F 20 65
	   61 74 20 65 76
	   65 72 79 74 68
	   69 6E 67 20 28
	   64 6F 74 73 20
	   27 2E 27 2C 20
	   6D 69 6E 65 73
	   20 27 95 27 29
	   20 6F 6E 20 74
	   68 65 20 6D 61
	   70 20 65 78 63
	   65 70 74 20 57
	   61 6C 6C 20 2E
	   0D 0A 00
 000005EF		     1		.code
 000005EF  52		     1		push	edx
 000005F0  BA 000011B6 R     1		mov	edx,OFFSET ??002A
 000005F5  E8 00000000 E     1		call	WriteString
 000005FA  5A		     1		pop	edx
 000005FB  E8 00000000 E	call crlf
				mwrite<"5.  So 1 points will be added to the score as as Pac-Man eats a dot. ",0dh,0ah>
 0000120E		     1		.data		
 0000120E 35 2E 20 20 53     1		??002B BYTE "5.  So 1 points will be added to the score as as Pac-Man eats a dot. ",0dh,0ah,0	
	   6F 20 31 20 70
	   6F 69 6E 74 73
	   20 77 69 6C 6C
	   20 62 65 20 61
	   64 64 65 64 20
	   74 6F 20 74 68
	   65 20 73 63 6F
	   72 65 20 61 73
	   20 61 73 20 50
	   61 63 2D 4D 61
	   6E 20 65 61 74
	   73 20 61 20 64
	   6F 74 2E 20 0D
	   0A 00
 00000600		     1		.code
 00000600  52		     1		push	edx
 00000601  BA 0000120E R     1		mov	edx,OFFSET ??002B
 00000606  E8 00000000 E     1		call	WriteString
 0000060B  5A		     1		pop	edx
 0000060C  E8 00000000 E	call crlf
				mwrite<"                      _____PRESS 6 TO GOTO TO BACK MENU______",0dh,0ah>
 00001256		     1		.data		
 00001256 20 20 20 20 20     1		??002C BYTE "                      _____PRESS 6 TO GOTO TO BACK MENU______",0dh,0ah,0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 5F 5F 5F
	   5F 5F 50 52 45
	   53 53 20 36 20
	   54 4F 20 47 4F
	   54 4F 20 54 4F
	   20 42 41 43 4B
	   20 4D 45 4E 55
	   5F 5F 5F 5F 5F
	   5F 0D 0A 00
 00000611		     1		.code
 00000611  52		     1		push	edx
 00000612  BA 00001256 R     1		mov	edx,OFFSET ??002C
 00000617  E8 00000000 E     1		call	WriteString
 0000061C  5A		     1		pop	edx
 0000061D  B0 00		mov al,0
 0000061F  E8 00000000 E	call readdec
 00000624  3C 06		cmp al,6
 00000626  0F 84 FFFFFEE5	je again1
 0000062C  EB 89		jmp instruction
				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 0000062E			lev_lab:
 0000062E  E8 00000000 E	call clrscr
				mwrite<"________________________________select the level you want to play_____________________________",0dh,0ah>
 00001296		     1		.data		
 00001296 5F 5F 5F 5F 5F     1		??002D BYTE "________________________________select the level you want to play_____________________________",0dh,0ah,0	
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 73 65 6C
	   65 63 74 20 74
	   68 65 20 6C 65
	   76 65 6C 20 79
	   6F 75 20 77 61
	   6E 74 20 74 6F
	   20 70 6C 61 79
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 0D
	   0A 00
 00000633		     1		.code
 00000633  52		     1		push	edx
 00000634  BA 00001296 R     1		mov	edx,OFFSET ??002D
 00000639  E8 00000000 E     1		call	WriteString
 0000063E  5A		     1		pop	edx
 0000063F  E8 00000000 E	CALL CRLF
 00000644  E8 00000000 E	CALL CRLF
 00000649  E8 00000000 E	CALL CRLF
				mwrite<"       press         1. LEVEL 1 ",0dh,0ah>
 000012F7		     1		.data		
 000012F7 20 20 20 20 20     1		??002E BYTE "       press         1. LEVEL 1 ",0dh,0ah,0	
	   20 20 70 72 65
	   73 73 20 20 20
	   20 20 20 20 20
	   20 31 2E 20 4C
	   45 56 45 4C 20
	   31 20 0D 0A 00
 0000064E		     1		.code
 0000064E  52		     1		push	edx
 0000064F  BA 000012F7 R     1		mov	edx,OFFSET ??002E
 00000654  E8 00000000 E     1		call	WriteString
 00000659  5A		     1		pop	edx
 0000065A  E8 00000000 E	CALL CRLF
				mwrite<"       press         2. LEVEL 2 ",0dh,0ah>
 0000131A		     1		.data		
 0000131A 20 20 20 20 20     1		??002F BYTE "       press         2. LEVEL 2 ",0dh,0ah,0	
	   20 20 70 72 65
	   73 73 20 20 20
	   20 20 20 20 20
	   20 32 2E 20 4C
	   45 56 45 4C 20
	   32 20 0D 0A 00
 0000065F		     1		.code
 0000065F  52		     1		push	edx
 00000660  BA 0000131A R     1		mov	edx,OFFSET ??002F
 00000665  E8 00000000 E     1		call	WriteString
 0000066A  5A		     1		pop	edx
 0000066B  E8 00000000 E	CALL CRLF
				mwrite<"       press         3. LEVEL 3 ",0dh,0ah>
 0000133D		     1		.data		
 0000133D 20 20 20 20 20     1		??0030 BYTE "       press         3. LEVEL 3 ",0dh,0ah,0	
	   20 20 70 72 65
	   73 73 20 20 20
	   20 20 20 20 20
	   20 33 2E 20 4C
	   45 56 45 4C 20
	   33 20 0D 0A 00
 00000670		     1		.code
 00000670  52		     1		push	edx
 00000671  BA 0000133D R     1		mov	edx,OFFSET ??0030
 00000676  E8 00000000 E     1		call	WriteString
 0000067B  5A		     1		pop	edx

 0000067C  E8 00000000 E	CALL CRLF
 00000681  66| B8 0000		mov ax,0
 00000685  E8 00000000 E	call readdec
 0000068A  66| 83 F8 03		cmp ax,3
 0000068E  77 9E		ja lev_lab
 00000690  66| A3		mov level,ax
	   00000653 R
 00000696  E8 00000000 E	call clrscr
 0000069B  E8 FFFFFAB9		call control_menu

 000006A0			exit_lab:
				exit
 000006A7  C3			ret
 000006A8			menu_proc endp


				END main
Microsoft (R) Macro Assembler Version 14.23.28106.4	    12/06/19 03:13:38
Source.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00001360 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000006A8 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
control_menu . . . . . . . . . .	P Near	 00000159 _TEXT	Length= 00000265 Public STDCALL
  l1 . . . . . . . . . . . . . .	L Near	 00000177 _TEXT	
  l2 . . . . . . . . . . . . . .	L Near	 0000018B _TEXT	
  l3 . . . . . . . . . . . . . .	L Near	 0000019F _TEXT	
  again  . . . . . . . . . . . .	L Near	 000001B1 _TEXT	
  l_1  . . . . . . . . . . . . .	L Near	 000001F3 _TEXT	
  l_2  . . . . . . . . . . . . .	L Near	 000001FF _TEXT	
  l_3  . . . . . . . . . . . . .	L Near	 0000020B _TEXT	
  next_go  . . . . . . . . . . .	L Near	 00000215 _TEXT	
  d  . . . . . . . . . . . . . .	L Near	 000002B5 _TEXT	
  dec_d  . . . . . . . . . . . .	L Near	 000002CE _TEXT	
  do_d . . . . . . . . . . . . .	L Near	 000002D4 _TEXT	
  go_d . . . . . . . . . . . . .	L Near	 000002E1 _TEXT	
  s  . . . . . . . . . . . . . .	L Near	 000002F0 _TEXT	
  sub_s  . . . . . . . . . . . .	L Near	 0000030D _TEXT	
  do_s . . . . . . . . . . . . .	L Near	 00000315 _TEXT	
  go_s . . . . . . . . . . . . .	L Near	 00000322 _TEXT	
  w  . . . . . . . . . . . . . .	L Near	 00000335 _TEXT	
  add_w  . . . . . . . . . . . .	L Near	 00000352 _TEXT	
  do_w . . . . . . . . . . . . .	L Near	 00000357 _TEXT	
  go_w . . . . . . . . . . . . .	L Near	 00000364 _TEXT	
  a  . . . . . . . . . . . . . .	L Near	 00000377 _TEXT	
  inc_a  . . . . . . . . . . . .	L Near	 00000390 _TEXT	
  do_a . . . . . . . . . . . . .	L Near	 00000393 _TEXT	
  go_a . . . . . . . . . . . . .	L Near	 000003A0 _TEXT	
  mine_1 . . . . . . . . . . . .	L Near	 000003AF _TEXT	
  won1 . . . . . . . . . . . . .	L Near	 000003B8 _TEXT	
display  . . . . . . . . . . . .	P Near	 00000016 _TEXT	Length= 00000143 Public STDCALL
loss_proc  . . . . . . . . . . .	P Near	 00000499 _TEXT	Length= 00000078 Public STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000016 Public STDCALL
menu_proc  . . . . . . . . . . .	P Near	 00000511 _TEXT	Length= 00000197 Public STDCALL
  again1 . . . . . . . . . . . .	L Near	 00000511 _TEXT	
  play_1_auto  . . . . . . . . .	L Near	 000005A4 _TEXT	
  instruction  . . . . . . . . .	L Near	 000005B7 _TEXT	
  lev_lab  . . . . . . . . . . .	L Near	 0000062E _TEXT	
  exit_lab . . . . . . . . . . .	L Near	 000006A0 _TEXT	
mine_proc  . . . . . . . . . . .	P Near	 000003BE _TEXT	Length= 0000005C Public STDCALL
  l_1  . . . . . . . . . . . . .	L Near	 000003ED _TEXT	
  l_2  . . . . . . . . . . . . .	L Near	 000003F7 _TEXT	
  l_3  . . . . . . . . . . . . .	L Near	 00000401 _TEXT	
  space_ . . . . . . . . . . . .	L Near	 0000040B _TEXT	
  zero . . . . . . . . . . . . .	L Near	 00000414 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
won_proc . . . . . . . . . . . .	P Near	 0000041A _TEXT	Length= 0000007F Public STDCALL
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 00000655 _DATA	
??0001 . . . . . . . . . . . . .	Byte	 000006B9 _DATA	
??0002 . . . . . . . . . . . . .	Byte	 0000071D _DATA	
??0003 . . . . . . . . . . . . .	Byte	 00000784 _DATA	
??0004 . . . . . . . . . . . . .	Byte	 000007E9 _DATA	
??0005 . . . . . . . . . . . . .	Byte	 0000084D _DATA	
??0006 . . . . . . . . . . . . .	Byte	 000008B1 _DATA	
??0007 . . . . . . . . . . . . .	Byte	 00000915 _DATA	
??0008 . . . . . . . . . . . . .	Byte	 00000979 _DATA	
??0009 . . . . . . . . . . . . .	Byte	 000009DE _DATA	
??000A . . . . . . . . . . . . .	Byte	 00000A43 _DATA	
??000B . . . . . . . . . . . . .	Byte	 00000AA7 _DATA	
??000C . . . . . . . . . . . . .	Byte	 00000B0A _DATA	
??000D . . . . . . . . . . . . .	Byte	 00000B2E _DATA	
??000E . . . . . . . . . . . . .	Byte	 00000B4F _DATA	
??000F . . . . . . . . . . . . .	Byte	 00000B6A _DATA	
??0010 . . . . . . . . . . . . .	Byte	 00000BA2 _DATA	
??0011 . . . . . . . . . . . . .	Byte	 00000BD9 _DATA	
??0012 . . . . . . . . . . . . .	Byte	 00000C10 _DATA	
??0013 . . . . . . . . . . . . .	Byte	 00000C47 _DATA	
??0014 . . . . . . . . . . . . .	Byte	 00000C7E _DATA	
??0015 . . . . . . . . . . . . .	Byte	 00000CB6 _DATA	
??0016 . . . . . . . . . . . . .	Byte	 00000CEE _DATA	
??0017 . . . . . . . . . . . . .	Byte	 00000D25 _DATA	
??0018 . . . . . . . . . . . . .	Byte	 00000D5C _DATA	
??0019 . . . . . . . . . . . . .	Byte	 00000D93 _DATA	
??001A . . . . . . . . . . . . .	Byte	 00000DCA _DATA	
??001B . . . . . . . . . . . . .	Byte	 00000E01 _DATA	
??001C . . . . . . . . . . . . .	Byte	 00000E39 _DATA	
??001D . . . . . . . . . . . . .	Byte	 00000E71 _DATA	
??001E . . . . . . . . . . . . .	Byte	 00000EA8 _DATA	
??001F . . . . . . . . . . . . .	Byte	 00000EDF _DATA	
??0020 . . . . . . . . . . . . .	Byte	 00000F16 _DATA	
??0021 . . . . . . . . . . . . .	Byte	 00000F4D _DATA	
??0022 . . . . . . . . . . . . .	Byte	 00000F84 _DATA	
??0023 . . . . . . . . . . . . .	Byte	 00000FBC _DATA	
??0024 . . . . . . . . . . . . .	Byte	 00000FE3 _DATA	
??0025 . . . . . . . . . . . . .	Byte	 0000100C _DATA	
??0026 . . . . . . . . . . . . .	Byte	 00001030 _DATA	
??0027 . . . . . . . . . . . . .	Byte	 00001052 _DATA	
??0028 . . . . . . . . . . . . .	Byte	 000010CF _DATA	
??0029 . . . . . . . . . . . . .	Byte	 00001158 _DATA	
??002A . . . . . . . . . . . . .	Byte	 000011B6 _DATA	
??002B . . . . . . . . . . . . .	Byte	 0000120E _DATA	
??002C . . . . . . . . . . . . .	Byte	 00001256 _DATA	
??002D . . . . . . . . . . . . .	Byte	 00001296 _DATA	
??002E . . . . . . . . . . . . .	Byte	 000012F7 _DATA	
??002F . . . . . . . . . . . . .	Byte	 0000131A _DATA	
??0030 . . . . . . . . . . . . .	Byte	 0000133D _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer_size  . . . . . . . . . .	Number	 000007D0h   
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lev_1  . . . . . . . . . . . . .	Byte	 00000000 _DATA	
lev_2  . . . . . . . . . . . . .	Byte	 000001FD _DATA	
lev_3  . . . . . . . . . . . . .	Byte	 000003FA _DATA	
level  . . . . . . . . . . . . .	Word	 00000653 _DATA	
life_str . . . . . . . . . . . .	Byte	 00000623 _DATA	
life . . . . . . . . . . . . . .	Word	 00000651 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
score_str  . . . . . . . . . . .	Byte	 000005F7 _DATA	
score  . . . . . . . . . . . . .	Word	 0000064F _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
